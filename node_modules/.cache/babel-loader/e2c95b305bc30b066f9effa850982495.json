{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farha\\\\OneDrive\\\\Desktop\\\\react-node-mongo-crud-starter-main\\\\src\\\\components\\\\Users\\\\Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/users').then(res => res.json()).then(data => setUsers(data));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"This is Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Available:\", users.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.name, \" :: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Users, \"SjRE+Wh7WTq/CnqUH4T+/qSC3y8=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useEffect","useState","Users","users","setUsers","fetch","then","res","json","data","length","map","user","name","email"],"sources":["C:/Users/farha/OneDrive/Desktop/react-node-mongo-crud-starter-main/src/components/Users/Users.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Users = () => {\n    const [users,setUsers]=useState([])\n    useEffect(()=>{\n        fetch('http://localhost:5000/users')\n        .then(res=>res.json())\n        .then(data=>setUsers(data))\n    })\n    return (\n        <div>\n            <h2>This is Users</h2>\n            <p>User Available:{users.length}</p>\n\n    <ul>\n        {\n            users.map(user=><li>\n                   {user.name} :: {user.email}\n            </li>)\n        }\n    </ul>\n\n        </div>\n    );\n};\n\nexport default Users;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBH,QAAQ,CAAC,EAAD,CAA/B;EACAD,SAAS,CAAC,MAAI;IACVK,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEMG,IAAI,IAAEL,QAAQ,CAACK,IAAD,CAFpB;EAGH,CAJQ,CAAT;EAKA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,8BAAmBN,KAAK,CAACO,MAAzB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAIJ;MAAA,UAEQP,KAAK,CAACQ,GAAN,CAAUC,IAAI,iBAAE;QAAA,WACRA,IAAI,CAACC,IADG,UACOD,IAAI,CAACE,KADZ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAhB;IAFR;MAAA;MAAA;MAAA;IAAA,QAJI;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CAtBD;;GAAMZ,K;;KAAAA,K;AAwBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}